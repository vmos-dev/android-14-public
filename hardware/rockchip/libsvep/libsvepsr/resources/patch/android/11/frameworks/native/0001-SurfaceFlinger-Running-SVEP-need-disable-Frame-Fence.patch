From cf353facd53919dc57bc9a8180c6a591fcc08593 Mon Sep 17 00:00:00 2001
From: libin <bin.li@rock-chips.com>
Date: Wed, 31 Jan 2024 19:38:56 +0800
Subject: [PATCH] SurfaceFlinger : Running SVEP need disable Frame Fenceding.

Signed-off-by: libin <bin.li@rock-chips.com>
Change-Id: I8f01046cf371bd715053900d5cd552f16fe5e488
---
 services/surfaceflinger/SurfaceFlinger.cpp | 19 +++++++++++++++++++
 services/surfaceflinger/SurfaceFlinger.h   |  6 +++++-
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index 0ca8fdbdb..dedabba90 100755
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -435,6 +435,13 @@ SurfaceFlinger::SurfaceFlinger(Factory& factory) : SurfaceFlinger(factory, SkipI
     property_get("debug.sf.disable_client_composition_cache", value, "0");
     mDisableClientCompositionCache = atoi(value);
 
+    //-------rk-code-----
+    // RK Support ：If set, disables frame pending function.
+    // RK SVEP 功能单帧耗时太长，部分场景需要关闭 Frame Pending功能
+    property_get("debug.sf.disable_frame_pending_by_svep_running", value, "0");
+    mDisableFramePending = atoi(value) > 0;
+    //------------
+
     // We should be reading 'persist.sys.sf.color_saturation' here
     // but since /data may be encrypted, we need to wait until after vold
     // comes online to attempt to read the property. The property is
@@ -1834,6 +1841,18 @@ bool SurfaceFlinger::previousFramePending(int graceTimeMs) {
     }
 
     const status_t status = fence->wait(graceTimeMs);
+
+    //-------rk-code-----
+    // 如果 SVEP 是 running 状态，则关闭FramePending功能
+    if(mDisableFramePending && status == -ETIME){
+        char value[PROPERTY_VALUE_MAX];
+        property_get("vendor.hwc.svep_state", value, "0");
+        if(atoi(value) > 0){
+            return false;
+        }
+    }
+    //------------
+
     // This is the same as Fence::Status::Unsignaled, but it saves a getStatus() call,
     // which calls wait(0) again internally
     return status == -ETIME;
diff --git a/services/surfaceflinger/SurfaceFlinger.h b/services/surfaceflinger/SurfaceFlinger.h
index 69f4875b3..3559adb6e 100644
--- a/services/surfaceflinger/SurfaceFlinger.h
+++ b/services/surfaceflinger/SurfaceFlinger.h
@@ -342,7 +342,11 @@ public:
     // If set, disables reusing client composition buffers. This can be set by
     // debug.sf.disable_client_composition_cache
     bool mDisableClientCompositionCache = false;
-
+    //-------rk-code-----
+    // RK Support ：If set, disables frame pending function.
+    // RK SVEP 功能单帧耗时太长，部分场景需要关闭Frame Pending功能
+    bool mDisableFramePending = false;
+    //------------
 private:
     friend class BufferLayer;
     friend class BufferQueueLayer;
-- 
2.25.1

